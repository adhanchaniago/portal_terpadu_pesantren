<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */
class M_presensi extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    /*
     * Get tb_role_admin by kode_role
     */
    function lihatdata()
    {
        $this->db->from("tb_presensi_kelas");
        $this->db->join("tb_guru","tb_guru.nip_guru=tb_presensi_kelas.nip_guru");
        $this->db->join("tb_kelas","tb_kelas.kd_kelas=tb_presensi_kelas.kd_kelas");
        $this->db->join("tb_tahun_ajaran","tb_tahun_ajaran.id_tahun=tb_presensi_kelas.id_tahun");
        return $this->db->get();
    }

    function lihatdatasatulengkap($id_kelas_belajar)
    {
        $this->db->from("tb_presensi_kelas");
        $this->db->join("tb_guru","tb_guru.nip_guru=tb_presensi_kelas.nip_guru");
        $this->db->join("tb_kelas","tb_kelas.kd_kelas=tb_presensi_kelas.kd_kelas");
        $this->db->join("tb_tahun_ajaran","tb_tahun_ajaran.id_tahun=tb_presensi_kelas.id_tahun");
        $this->db->where("tb_presensi_kelas.id_kelas_belajar",$id_kelas_belajar);
        return $this->db->get();
    }

    function lihatdatasatu($id_kelas_belajar)
    {
        $this->db->where("id_kelas_belajar",$id_kelas_belajar);
        return $this->db->get('tb_presensi_kelas');
    }

    function cekdata($nip)
    {
        $this->db->where("nip_guru",$nip);
        return $this->db->get('tb_guru')->num_rows();
    }

    function tambahdata($array)
    {
        return $this->db->insert('tb_presensi_kelas',$array);
    }

    function editdata($id,$array)
    {
        $this->db->where("id_kelas_belajar",$id);
        return $this->db->update('tb_presensi_kelas',$array);
    }
    function hapus($id)
    {
        $this->db->where("id_kelas_belajar",$id);
        return $this->db->delete('tb_presensi_kelas');
    }
   /////////////////////////////////////////

   function lihatdatasantri($id_kelas_belajar)
   {
        $this->db->from("tb_kelas_santri");
        $this->db->join("tb_santri","tb_santri.nis_lokal=tb_kelas_santri.nis_lokal");
        $this->db->where("tb_kelas_santri.id_kelas_belajar",$id_kelas_belajar);
        return $this->db->get();
   }

   function lissantri($id_kelas_belajar)
   {
        $exec = $this->lihatdatasatu($id_kelas_belajar)->row_array();
        $id_tahun = $exec['id_tahun'];
        $jenjang = $exec['jenjang'];
        return $this->db->query("SELECT * FROM tb_santri WHERE NOT EXISTS (SELECT * FROM tb_kelas_santri inner join tb_presensi_kelas on tb_kelas_santri.id_kelas_belajar = tb_presensi_kelas.id_kelas_belajar  WHERE tb_santri.nis_lokal=tb_kelas_santri.nis_lokal and tb_presensi_kelas.id_tahun='$id_tahun') AND tb_santri.kelas='$jenjang' ");
   }

   function tambahdatasantri($array)
   {
       return $this->db->insert('tb_kelas_santri',$array);
   }

   function lihatdatasatusantri($id_kelas_santri)
   {
        $this->db->from("tb_kelas_santri");
        $this->db->join("tb_santri","tb_santri.nis_lokal=tb_kelas_santri.nis_lokal");
        $this->db->where("tb_kelas_santri.id_kelas_santri",$id_kelas_santri);
        return $this->db->get();
   }


   function cekdataberkas($id_berkas)
    {
        $this->db->where("id_berkas",$id_berkas);
        return $this->db->get('tb_berkas_guru')->num_rows();
    }

    function editdatasantri($id_kelas_santri,$array)
    {
        $this->db->where("id_kelas_santri",$id_kelas_santri);
        return $this->db->update('tb_kelas_santri',$array);
    }
    function hapussantri($id_kelas_santri)
    {
        $this->db->where("id_kelas_santri",$id_kelas_santri);
        return $this->db->delete('tb_kelas_santri');
    }

}
